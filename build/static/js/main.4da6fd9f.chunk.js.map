{"version":3,"sources":["static/images/roundCart.svg","components/Product.js","components/LoadingScreen.js","components/Products.js","static/images/logo.svg","static/images/cart.svg","components/QuantityModifierSmall.js","components/CartOverlay.js","components/ModalOverlay.js","components/CurrencySelector.js","components/Header.js","components/OptionSelectorBox.js","components/ProductDetails.js","components/ProductPage.js","static/images/left.svg","static/images/right.svg","components/PhotoSlider.js","components/QuantityModifier.js","components/CartOptionSelectorBox.js","components/Cart.js","App.js","index.js"],"names":["ProductCard","styled","div","ProductName","p","Price","OutOfStockText","MainImage","img","Cart","LinkPDP","Link","Product","props","showProductPage","setProductPageItem","product","outofstockStyle","inStock","opacity","marginBottom","outofstockText","outofstockCart","visibility","getCurrency","currencyIndex","selectedCurrency","currency","prices","getAmount","amount","handleCartClick","e","attributes","length","preventDefault","alert","object","quantity","productOptions","addToCart","state","link","availability","this","to","src","gallery","alt","onClick","style","RoundCart","name","PureComponent","LoadingScreen","Container","size","color","ProductsGrid","Title","h1","PRODUCTS_QUERY","gql","Products","filteredList","array","data","loading","category","products","map","push","displayTitle","charAt","toUpperCase","slice","renderProducts","id","graphql","options","variables","ModifierBox","Modifier","Quantity","h2","QuantityModifierSmall","add","updateQuantity","item","subtract","CartContainer","MyBag","h3","ItemsSpan","span","ItemContainer","Attribute","Side1","Side2","Image","TotalSection","ButtonContainer","ViewbagButton","CheckoutButton","ColorContainer","ColorCube","CartOverlay","getItemOptions","attribute","i","attributeName","option","getTotal","total","items","currencySymbol","getCurrencySymbol","toFixed","mybagText","totalItems","symbol","showItems","index","price","type","backgroundColor","uuidv4","cartDisplay","Component","Modal","ModalOverlay","removeModal","SelectCurrency","select","CURRENCY_QUERY","CurrencySelector","getCurrencies","currencies","value","handleCurrancyChange","indexOf","target","changeCurrency","onChange","HeaderElement","header","CategoryContainer","Radio","input","CategoryButton","label","LogoContainer","ActionsMenuContainer","CartIcon","ItemCounter","Header","showTech","updateCategory","showClothes","showAll","setState","showCart","disableCart","cartItemAmount","itemCounter","showCartOverlay","saveOption","selectedOptions","checked","readOnly","minWidth","htmlFor","Logo","OptionBox","ColorBox","Input","OptionSelectorBox","populateOptions","productName","optionsToRender","defaultChecked","MainContainer","OptionBoxes","AttributeTitle","AddToCart","button","Description","ProductDetails","addProductToCart","counter","selectedOption","objectID","disableButton","available","display","purifyHtml","html","sanitizeHtml","allowedTags","allowedAttributes","renderAttributes","getPrice","err","console","error","dangerouslySetInnerHTML","__html","description","main","SideImages","SideImage","MainImageContainer","ProductPage","updateImgIndex","imgURL","imgIndex","findIndex","populateImgArray","renderSideImages","images","getMainImage","cartItems","SliderContainer","Left","Right","PhotoSlider","moveLeft","moveRight","hideArrow","photos","ChevronLeft","ChevronRight","QuantityModifier","CartOptionSelectorBox","updateCartItem","CartTitle","TotalAmount","undefined","getCartTitle","totalText","client","ApolloClient","uri","App","handleCategoryChange","handleCurrencyChange","productPageItem","localStorage","setItem","JSON","stringify","concat","matchCounter","ii","cartItem","productOption","splice","modifier","dataArray","exact","path","productsArray","parse","getItem","cache","InMemoryCache","introspection","playground","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4da6fd9f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roundCart.c2e3684b.svg\";","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport RoundCart from '../static/images/roundCart.svg'\nimport { Link } from 'react-router-dom'\n\nconst ProductCard = styled.div`\n    margin: auto;\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n    width: 386px;\n    height: 464px;\n    &:hover {\n        box-shadow: 0px 4px 35px rgba(168, 172, 176, 0.19);\n        transition: 300ms;\n    }\n`\nconst ProductName = styled.p`\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    color: #1D1F22;\n    margin-left: 1rem;\n    line-height: 10px;\n`\nconst Price = styled.p`\n    font-style: normal;\n    font-weight: 500;\n    font-size: 18px;\n    margin-left: 1rem;\n`\nconst OutOfStockText = styled.p`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    bottom: 105px;\n    text-decoration: none;\n    font-family: 'Raleway';\n    font-weight: 400;\n    font-size: 24px;\n    color: grey;\n`\nconst MainImage = styled.img`\n    width: 94%; \n    height: 78%; \n    margin: 0.64rem;\n    margin-bottom: -6rem;\n`\nconst Cart = styled.img`\n    position: relative;\n    display: flex;\n    left: 300px;\n    bottom: -15px;\n    visibility: hidden;\n    cursor: pointer;\n    margin: 0;\n`\nconst LinkPDP = styled(Link)`\n    text-decoration: none;\n    &:hover > img {\n        visibility: visible;\n    }\n`\nclass Product extends PureComponent{\n    constructor(props){\n        super(props)\n        this.state={\n            link: '/product'\n        }\n    }\n    showProductPage = () => {\n        this.props.setProductPageItem(this.props.product)\n    }\n    outofstockStyle = (inStock) => {\n        if (!inStock){\n            return({opacity: '0.5', marginBottom: '-8rem'})\n        }\n        return null\n    }\n    outofstockText = (inStock) => {\n        if(!inStock){\n            return 'OUT OF STOCK'\n        }\n        return null\n    }\n    outofstockCart = (inStock) => {\n        if(!inStock){\n            return{visibility: 'hidden'}\n        }\n    }\n    getCurrency = () => {\n        const currencyIndex = this.props.selectedCurrency\n        let currency = this.props.product.prices[currencyIndex].currency\n        if (currency === 'USD') {currency = '$'}\n        if (currency === 'GBP') {currency = '£'}\n        if (currency === 'JPY') {currency = '¥'} \n        if (currency === 'RUB') {currency = '₽'}\n        return currency\n    }\n    getAmount = () => {\n        const currencyIndex = this.props.selectedCurrency\n        return this.props.product.prices[currencyIndex].amount\n    }\n    handleCartClick = (e) => {\n        if (this.props.product.attributes.length === 0) {\n            e.preventDefault()//this will prevent page from changing to /product\n            alert('Item has been added to cart')\n            const object = {\n                product: this.props.product,\n                quantity: 1,\n                productOptions: []\n            }\n            this.props.addToCart(object)\n        } else {\n            this.showProductPage()\n        }\n    }\n    render() {\n        const availability = this.props.product.inStock\n        return(\n            <ProductCard>\n                <LinkPDP to='/eshop_react/product'>\n                    <MainImage \n                        src={this.props.product.gallery[0]} \n                        alt='product' \n                        onClick={this.showProductPage}\n                        style={this.outofstockStyle(availability)}\n                    />\n                    <OutOfStockText>{this.outofstockText(availability)}</OutOfStockText>\n                    <Cart \n                        src={RoundCart} \n                        onClick={(e)=>this.handleCartClick(e)}\n                        style={(this.outofstockCart(availability))}\n                    />\n                </LinkPDP>\n                <ProductName>{this.props.product.name}</ProductName>\n                <Price>{this.getCurrency()}{this.getAmount()}</Price>\n            </ProductCard>\n        )\n    }\n}\nexport default Product","import PropagateLoader from \"react-spinners/PropagateLoader\";\nimport styled from 'styled-components'\n\nconst LoadingScreen = () => {\n  const Container = styled.div`\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    margin-top: 38vh;\n  `\n\n    return(\n      <Container>\n        <PropagateLoader size={14} color='#7fff5c'/>\n      </Container>\n    )\n}\n\nexport default LoadingScreen","import React, { PureComponent } from 'react'\nimport Product from './Product'\nimport LoadingScreen from './LoadingScreen'\nimport styled from 'styled-components'\nimport gql from 'graphql-tag'\nimport {graphql} from 'react-apollo'\n\nconst ProductsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 3fr 3fr;\n  grid-template-rows: 1fr;\n  font-family: 'Raleway', sans-serif;\n`\nconst Title = styled.h1`\n  font-family: 'Raleway';\n  font-style: normal;\n  font-weight: normal;\n  font-size: 37px;\n  margin-left: 4rem;\n`\n//$category has value of props.category, which allows us to filter the query before the data is fetched\nconst PRODUCTS_QUERY = gql`\n  query($category: String!){ \n    category(input: {title: $category}){\n      products{\n        id,\n        inStock,\n        name,\n        prices{\n          amount,\n          currency\n        }\n        gallery,\n        description,\n        category,\n        attributes{\n          items{\n            id,\n            value\n          }\n          id,\n          name,\n          type,\n        }\n      }\n    }\n  }\n`\nclass Products extends PureComponent{    \n  filteredList = () => {\n    const array = []\n    if (!this.props.data.loading){\n      this.props.data.category.products.map(product => array.push(product))\n    }\n    return array\n  }\n  displayTitle = () => {\n    if (this.filteredList().length < 1){\n      return <LoadingScreen />\n    }\n    if (this.props.category === '') {\n      return 'Category - All'\n    }\n    return `Category - ${this.props.category.charAt(0).toUpperCase()+ this.props.category.slice(1)}`\n  }\n  renderProducts = () => {\n    const array = []\n    this.filteredList().map(product => array.push(\n      <Product \n        key={product.id} \n        product={product} \n        selectedCurrency={this.props.selectedCurrency}\n        setProductPageItem={this.props.setProductPageItem}\n        addToCart={this.props.addToCart}\n      />\n    ))\n    return array\n  }\n  render(){\n    return(\n      <>\n        <Title>{this.displayTitle()}</Title>\n        <ProductsGrid>{this.renderProducts()}</ProductsGrid>\n      </>\n    )\n  }\n}\nexport default graphql(PRODUCTS_QUERY, {\n  options: (props) =>{\n    return { //passes a category variable to products query, from where it can be used to filter the data\n        variables: {category: props.category}}\n  }\n})(Products)","export default __webpack_public_path__ + \"static/media/logo.e2b3f410.svg\";","export default __webpack_public_path__ + \"static/media/cart.d1995367.svg\";","import React,{PureComponent} from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 137px;;\n    justify-content: space-between;\n    margin-right: 1rem;\n`\nconst ModifierBox = styled.div`\n    display: block;\n    box-sizing: border-box;\n    width: 25px;\n    height: 25px;\n    border: 1px solid #1D1F22;\n    text-align: center; \n    background-color: white;\n    cursor: pointer;\n    &:hover {\n        background-color: black;\n        color: white;\n        transition: 300ms;\n    }\n`\nconst Modifier = styled.h1`\n    font-family: 'Raleway';\n    font-weight: 200;\n    font-size: 1.6rem;\n    position: relative;\n    bottom: 1.28rem;\n    user-select: none;\n`\nconst Quantity = styled.h2`\n    font-family: 'Raleway';\n    font-weight: 200;\n    font-size: 1rem;\n`\n\nclass QuantityModifierSmall extends PureComponent {\n    add = () => {\n        this.props.updateQuantity(this.props.item, +1)\n    }\n    subtract = () => {\n        if (this.props.item.quantity > 0) {\n            this.props.updateQuantity(this.props.item, -1)\n        }\n    }\n    render(){ \n        return(\n            <Container>\n                <ModifierBox>\n                    <Modifier onClick={this.add}>+</Modifier>\n                </ModifierBox>\n                <Quantity>{this.props.item.quantity}</Quantity>\n                <ModifierBox>\n                    <Modifier onClick={this.subtract}>-</Modifier>\n                </ModifierBox>\n            </Container>\n        )\n    }\n}\nexport default QuantityModifierSmall","import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom'\nimport QuantityModifierSmall from './QuantityModifierSmall'\n\nconst CartContainer = styled.div` \n    position: absolute;\n    z-index: 3;\n    min-height: 300px;\n    min-width: 385px;\n    background: white;\n    left: 58vw;\n    @media(min-width: 1280px) {\n        left: 66vw\n    }\n    @media(min-width: 1500px) {\n        left: 70vw\n    }\n    @media(min-width: 1700px) {\n        left: 72vw\n    }\n    @media(min-width: 1800px) {\n        left: 75vw\n    }\n    @media(min-width: 1900px) {\n        left: 78vw\n    }\n    @media(min-width: 2000px) {\n        left: 80vw\n    }    \n`\nconst MyBag = styled.h3`\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: bold;\n    font-size: 16px;\n    line-height: 26px;\n    margin-left: 1rem;\n`\nconst ItemsSpan = styled.span`\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: 200;\n    font-size: 16px;\n`\n\nconst ItemContainer = styled.div`\n    font-family: 'Raleway', sans-serif;\n    display: flex;\n    justify-content: space-between;\n    width: 98%;\n    min-height: 140px;\n    align-items: center;\n`\nconst Title = styled.p`\n    font-family: 'Raleway', sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 18px;\n    align-items: center;\n    color: #1D1F22;\n    margin-left: 1rem;\n`\nconst Price = styled.p`\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 14px;\n    align-items: center;\n    color: #1D1F22;\n    margin-left: 1rem;\n    margin-right: 1rem;\n    line-height: 3px;\n`\nconst Attribute = styled.p`\n    font-style: normal;\n    font-weight: 100;\n    font-size: 14px;\n    align-items: center;\n    color: #1D1F22;\n    margin-left: 1rem;\n    line-height: 5px;\n`\nconst Side1 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    min-height: 137px;\n    text-overflow: none;\n    margin-top: 0.6rem;\n    margin-bottom: 0.6rem;\n`\nconst Side2 = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    min-height: 137px;\n    margin-top: 0.6rem;\n    margin-bottom: 0.6rem;\n`\nconst Image = styled.img`\n    width: 100px;\n    height: 137px;\n`\nconst TotalSection = styled.div`\n    display: flex;\n    justify-content: space-between;\n    height: 30px;\n    align-items: center;\n    margin-top: 1.5rem;\n    margin-bottom: 1.5rem;\n`\nconst ButtonContainer = styled.div`\n    height: 43px;\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n    margin-bottom: 1.5rem;\n`\nconst ViewbagButton = styled(Link)`\n    font-family: 'Raleway', sans-serif;\n    text-decoration: none;\n    font-weight: 600;\n    font-size: 14px; \n    min-width: 150px;\n    padding-top:12px;\n    background-color: white;\n    border: 1px solid black;\n    color: black;\n    text-align: center;\n    &:hover{\n        opacity: 0.5;\n    }\n`\nconst CheckoutButton = styled(Link)`\n    font-family: 'Raleway', sans-serif;\n    text-decoration: none;\n    border: none;\n    font-weight: 600;\n    font-size: 14px;\n    min-width: 150px;\n    padding-top:13px;\n    background-color: #5ECE7B;\n    color: white;\n    text-align: center;\n    &:hover{\n        opacity: 0.7;\n    }\n`\nconst ColorContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: -4px;\n`\nconst ColorCube = styled.div`\n    max-width: 8px;\n    padding: 8px;\n    border: 1px black solid;\n    margin-left: 5px;\n`\n\nclass CartOverlay extends Component {\n    getItemOptions = (attribute, item) => {\n        for (let i=0; i<item.productOptions.length; i++){\n            if(item.productOptions[i].attributeName === attribute.name){\n                return item.productOptions[i].option\n            }\n        }\n    }\n    getTotal = () => {\n        let total = 0;\n        const items = this.props.items\n        const currencySymbol = this.getCurrencySymbol(this.props.items[0].product.prices[this.props.selectedCurrency].currency)\n        items.map(item => {\n            return total += item.product.prices[this.props.selectedCurrency].amount * item.quantity\n        })\n        return currencySymbol+total.toFixed(2)\n    }\n    mybagText = () => {\n        const items = this.props.items\n        let totalItems = `${items.length} items`\n        if (items.length === 1) {\n            totalItems=`${items.length} item`\n        }\n        return(<MyBag>My Bag.<ItemsSpan> {totalItems}</ItemsSpan></MyBag>)\n    }\n    getCurrencySymbol = (currency) => {\n        let symbol = currency\n        if (symbol === 'USD') {symbol = '$'}\n        if (symbol === 'GBP') {symbol = '£'}\n        if (symbol === 'JPY') {symbol = '¥'}\n        if (symbol === 'RUB') {symbol = '₽'} \n        return symbol\n    }\n    showItems = () => {\n        const array = []\n        const items = this.props.items\n        const index = this.props.selectedCurrency\n        items.map(item => {\n            const currency = item.product.prices[index].currency\n            let price = item.product.prices[index].amount\n            return array.push(\n                <ItemContainer key={uuidv4()}>\n                    <Side1>\n                        <Title>{item.product.name}</Title> \n                        <Price>{this.getCurrencySymbol(currency)}{price}</Price>\n                        <div>\n                            {item.product.attributes.length === 0 ? null :\n                                item.product.attributes.map(attribute => \n                                    {if (attribute.type === 'swatch') {\n                                        return(\n                                            <ColorContainer key={uuidv4()}>\n                                                <Attribute>{attribute.id}: </Attribute>\n                                                <ColorCube style={{backgroundColor: this.getItemOptions(attribute, item)}} />\n                                            </ColorContainer>)\n                                    } else {\n                                        return(\n                                            <div key={uuidv4()}>\n                                                <Attribute>{attribute.id}: {this.getItemOptions(attribute, item)}</Attribute>\n                                            </div>\n                                    )}}\n                                )\n                            }\n                        </div>\n                    </Side1>\n                    <Side2>\n                        <QuantityModifierSmall item={item} updateQuantity={this.props.updateQuantity}/>\n                        <Image src={item.product.gallery[0]} />\n                    </Side2>\n                </ItemContainer>\n            ) \n        })\n        return array\n    }\n    render(){\n        return(\n            <CartContainer>\n                {this.mybagText()}\n                {this.showItems()}\n                <TotalSection>\n                    <Title>Total</Title>\n                    <Price>{this.getTotal()}</Price>\n                </TotalSection>\n                <ButtonContainer>\n                    <ViewbagButton to='/eshop_react/cart' onClick={this.props.cartDisplay}>VIEW BAG</ViewbagButton>\n                    <CheckoutButton to='/eshop_react/cart' onClick={this.props.cartDisplay}>CHECK OUT</CheckoutButton>\n                </ButtonContainer>\n            </CartContainer>\n        )\n    }\n}\nexport default CartOverlay","import React, {PureComponent} from 'react'\nimport styled from 'styled-components'\n\nconst Modal = styled.div`\n  position: fixed; \n  overflow: auto; \n  width: 100%; \n  height: 100vh; \n  top: 0;\n  overflow: auto; \n  background-color: rgba(0,0,0,0.3); \n  z-index: 2;\n`   \n\nclass ModalOverlay extends PureComponent {\n    removeModal = () => {\n      this.props.cartDisplay()\n    }\n    render(){\n        return(<Modal onClick={this.removeModal}/>)\n    }\n}\nexport default ModalOverlay","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport gql from 'graphql-tag'\nimport {graphql} from 'react-apollo'\n\nconst SelectCurrency = styled.select`\n    color: #43464E;\n    border: none;\n    font-size: 1.4rem;\n    background: transparent;\n    outline: 0px;\n    margin-right: 18px;\n    max-width: 40px;\n`\nconst CURRENCY_QUERY = gql`\n    query {\n        currencies\n    }\n`\nclass CurrencySelector extends PureComponent {\n    getCurrencies = () => {\n        const currencies = []\n        if (!this.props.data.loading){\n        this.props.data.currencies.map(currency => {\n            //Add symbols to currencies before they are passed as options:\n            let currencySymbol = ''\n            if (currency === 'USD'){currencySymbol = '$'}\n            if (currency === 'GBP'){currencySymbol = '£'}\n            if (currency === 'JPY'){currencySymbol = '¥'}\n            if (currency === 'RUB'){currencySymbol = '₽'}\n            //If symbol is unavailable for currency, retain the original value:\n            if (currencySymbol === ''){ currencySymbol = currency}\n            return (currencies.push(\n                <option value={currency} key={currency}>{currencySymbol}</option>\n            ))\n        })}\n        return currencies\n    }\n    handleCurrancyChange = (e) => {\n        const array = this.props.data.currencies\n        const index = array.indexOf(e.target.value)\n        this.props.changeCurrency(index)\n      }\n    render() {\n        return (\n            <SelectCurrency onChange={this.handleCurrancyChange }>{this.getCurrencies()}</SelectCurrency>\n        )\n    }\n}\nexport default graphql(CURRENCY_QUERY)(CurrencySelector)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Logo from '../static/images/logo.svg'\nimport Cart from '../static/images/cart.svg'\nimport CartOverlay from './CartOverlay'\nimport ModalOverlay from './ModalOverlay'\nimport CurrencySelector from './CurrencySelector'\nimport { Link } from 'react-router-dom'\n\nconst HeaderElement = styled.header`\n  position: relative;\n  height: 80px;\n  width: 100%;\n  background-color: #FFFFFF;\n  z-index: 4;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: 'Raleway', sans-serif;\n`\nconst CategoryContainer = styled.div`\n  height: 56;\n  width: 234px;\n  margin-left: 3rem;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: row;\n`\nconst Radio = styled.input`\n    display: none;\n    &:checked + label {\n        color: #5ECE7B;\n        border-bottom: 2px solid #5ECE7B;\n    }\n`\nconst CategoryButton = styled.label`\n  display: block;\n  box-sizing: border-box;\n  min-height: 35px;\n  min-width: 97px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  color: black;\n  border: none;\n  text-align: center;\n  &:hover{\n      border-bottom: 2px solid #5ECE7B;\n      color: #5ECE7B;\n  }\n  background: transparent;\n`\nconst LogoContainer = styled.div`\n  width: 68vw;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst ActionsMenuContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 24px;\n  width: 80px;\n  padding: 40px;\n  margin-right: 3rem;\n`\nconst CartIcon = styled.div`\n  position: relative;\n  top: 2px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.4;\n  }\n`\nconst ItemCounter = styled.span`\n  text-align: center;\n  position: absolute;\n  bottom: 14px;\n  left: 15px;\n  width: 20px;\n  height: 20px;\n  background: black;\n  border-radius: 50%;\n  color: white;\n`\n\nclass Header extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      showCart: false\n    }\n  }\n  showTech = () => {\n    this.props.updateCategory('tech')\n  }\n  showClothes = () => {\n    this.props.updateCategory('clothes')\n\n  }\n  showAll = () => {\n    this.props.updateCategory('') //if query receives empty title string, it will fetch items of all category\n  }\n  cartDisplay = () => {\n    this.setState({showCart: !this.state.showCart})\n  }\n  disableCart = () => {\n    this.setState({showCart: false})\n  }\n  cartItemAmount = (totalItems) => {\n    if(totalItems.length > 0){\n      let itemCounter = 0;\n      totalItems.map(item => {\n        return itemCounter+=item.quantity\n      })\n      return(<ItemCounter>{itemCounter}</ItemCounter>)  \n    }\n    return null\n  }\n  showCartOverlay = () => {\n    if (this.state.showCart === true && this.props.items.length>0) {\n      return(\n        <div>\n          <CartOverlay \n            items={this.props.items} \n            selectedCurrency={this.props.selectedCurrency}\n            updateQuantity={this.props.updateQuantity}\n            saveOption={this.props.saveOption}\n            selectedOptions={this.props.selectedOptions}\n            cartDisplay={this.cartDisplay}\n          />\n          <ModalOverlay cartDisplay={this.cartDisplay} />\n        </div>\n      )\n    }\n    return null\n  }\n  render(){\n    return(\n      <>\n        <HeaderElement>\n            <CategoryContainer onClick={this.disableCart}>\n              <div>\n                <Link to='/eshop_react/'>\n                  <Radio\n                    type='radio'\n                    checked={this.props.category === ''}\n                    onClick={this.showAll}\n                    id='allRadioBtn'\n                    readOnly\n                />\n                </Link>\n                <CategoryButton style={{minWidth: '77px'}} htmlFor='allRadioBtn'>ALL</CategoryButton>\n              </div>\n              <div>\n                <Link to='/eshop_react/'>\n                  <Radio\n                      type='radio'\n                      checked={this.props.category === 'tech'}\n                      onClick={this.showTech}\n                      id='techRadioBtn'\n                      readOnly\n                  />\n                </Link>\n                <CategoryButton htmlFor='techRadioBtn'>TECH</CategoryButton>\n              </div>\n              <div>\n                <Link to='/eshop_react/'>\n                  <Radio\n                      type='radio'\n                      checked={this.props.category === 'clothes'}\n                      onClick={this.showClothes}\n                      id='clothesRadioBtn'\n                      readOnly\n                  />\n                </Link>\n                <CategoryButton htmlFor='clothesRadioBtn'>CLOTHES</CategoryButton>\n              </div>\n            </CategoryContainer>\n            <LogoContainer onClick={this.disableCart}>\n              <Link to='/eshop_react/'><img src={Logo} alt='logo'/></Link>\n            </LogoContainer>\n            <ActionsMenuContainer>\n                <CurrencySelector changeCurrency={this.props.changeCurrency} /> \n                <CartIcon onClick={this.cartDisplay}>\n                  <img src={Cart} alt='cart'/>\n                  {this.cartItemAmount(this.props.items)}\n                </CartIcon>\n            </ActionsMenuContainer>\n        </HeaderElement>\n        {this.showCartOverlay()} \n      </> \n    )\n  }\n}\nexport default Header;","import React, {PureComponent} from 'react'\nimport styled from 'styled-components'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst OptionBox = styled.label`\n    display: block;\n    box-sizing: border-box;\n    min-width: 68px;\n    border: 1px solid #1D1F22;\n    align-items: center;\n    text-align: center; \n    background-color: white;\n    cursor: pointer;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    margin-right: 1rem;\n    margin-bottom: 1rem;\n    &:hover {\n        background-color: black;\n        color: white;\n        transition: 300ms;\n    }\n`\nconst ColorBox = styled.label`\n    display: block;\n    box-sizing: border-box;\n    min-width: 66px;\n    min-height: 48px;\n    border: 1px solid #1D1F22;\n    align-items: center;\n    text-align: center; \n    cursor: pointer;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    margin-right: 1rem;\n    margin-bottom: 1rem;\n    background-color: black;\n    opacity: 1;\n    &:hover {\n        border: 2px black solid;\n    }\n`\nconst Input = styled.input`\n    display: none;\n    &:checked + label {\n        background-color: black;\n        color: white;\n    }\n    &:checked + #colorbox {\n        opacity: 0.7;\n        border: 3px black solid;\n    }\n`\n\nclass OptionSelectorBox extends PureComponent {\n    onChange = (option) => {\n        this.props.saveOption(this.props.product.name, this.props.attribute.name, option) //passes data back to App\n    }\n    populateOptions = (attribute, item) => {\n        const selectedOptions = this.props.selectedOptions\n        for (let i=0; i<selectedOptions.length; i++){\n            if (selectedOptions[i].productName === this.props.product.name \n             && selectedOptions[i].attributeName === attribute \n             && selectedOptions[i].option === item) {\n                return true\n            }\n        }\n    }\n    optionsToRender = (attribute) => {\n        const array = []\n        if (attribute.type === 'swatch') {\n            attribute.items.map(item => array.push(\n                <div key={uuidv4()}>\n                    <Input\n                        type='radio'\n                        value={item.value} \n                        name={attribute.name}\n                        defaultChecked={this.populateOptions(attribute.name, item.value)}\n                        onClick={()=>this.onChange(item.value)}\n                        id={item.value + attribute.name}\n                    />\n                    <ColorBox id='colorbox'\n                        htmlFor={item.value + attribute.name} \n                        style={{backgroundColor: item.value}}\n                    />\n                </div>))\n        } else { \n            attribute.items.map(item => array.push(\n                <div key={uuidv4()}>\n                    <Input\n                        type='radio'\n                        value={item.value} \n                        name={attribute.name}\n                        defaultChecked={this.populateOptions(attribute.name, item.value)}\n                        onClick={()=>this.onChange(item.value)}\n                        id={item.value + attribute.name}\n                    />\n                    <OptionBox htmlFor={item.value + attribute.name}>{item.value}</OptionBox>\n                </div>))\n        }\n        return array\n    }\n    render(){\n        return(\n            this.optionsToRender(this.props.attribute)\n        )\n    }\n}\nexport default OptionSelectorBox","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport OptionSelectorBox from './OptionSelectorBox'\nimport { v4 as uuidv4 } from 'uuid';\nimport sanitizeHtml from 'sanitize-html';\n\nconst MainContainer = styled.div`\n    font-family: 'Raleway', sans-serif;\n    width: 340px;\n`\nconst ProductName = styled.h1`\n    display: flex;\n    justify-content: flex-start;\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 30px;\n    margin-bottom: 3rem;\n`\nconst OptionBoxes = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    margin: auto;\n`\nconst AttributeTitle = styled.h2`\n    display: flex;\n    flex: flex-start;\n    font-family: 'Roboto Condensed';\n    font-style: normal;\n    font-weight: bold;\n    font-size: 18px;\n    line-height: 18px;\n`\nconst AddToCart = styled.button`\n    padding: 16px 32px;\n    width: 338px;\n    height: 52px;\n    background: #5ECE7B;\n    color: white;\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: 600;\n    border: none;\n    margin: auto;\n    margin-bottom: 1rem;\n    &:hover {\n        transition: 300ms;\n        opacity: 0.7;\n    }\n`\nconst Description = styled.div`\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n`\nconst Price = styled.p`\n    display: flex;\n    justify-content: flex-start;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 24px;\n    line-height: 18px;\n    color: #1D1F22;\n`\n\nclass ProductDetails extends PureComponent {\n    addProductToCart = (product) => {\n        if (!product.inStock){return null}\n        //if item has options, user needs to select them before item is added to cart:\n        let counter = 0\n        const productOptions = []\n        if (product.attributes.length > 0){\n            this.props.selectedOptions.map(selectedOption => { \n                //count how many options have been selected for this item:\n                if (selectedOption.productName === product.name){\n                    counter++\n                    return productOptions.push(selectedOption)\n                } else {return null}\n            })\n            if (counter !== product.attributes.length){\n                return alert('All the available product options need to be selected.')\n            }\n        }\n        const objectID=uuidv4()\n        const object = {product, productOptions, objectID}\n        this.props.addToCart(object)\n    }\n    disableButton = (available) => {\n        if(!available){return({display: 'none'})}\n        return null\n    }\n    purifyHtml = (html) => {\n        const purifiedHtml = sanitizeHtml(html, {\n            allowedTags: ['p', 'ul', 'li', 'div', 'span', 'strong', 'h2','h3','h4'],\n            allowedAttributes: {}\n        })\n        return purifiedHtml\n    }\n    renderAttributes = (product) => {\n        const array = []\n        product.attributes.map(attribute => array.push(\n                <div key={uuidv4()}>\n                    <AttributeTitle>{attribute.name}:</AttributeTitle>\n                        <OptionBoxes key={uuidv4()}>\n                            <OptionSelectorBox \n                                key={uuidv4()}\n                                attribute={attribute} \n                                product={product} \n                                saveOption={this.props.saveOption} \n                                selectedOptions={this.props.selectedOptions}    \n                            />\n                        </OptionBoxes>\n                    <br/>\n                </div>\n            )\n        )\n        return array\n    }\n    getPrice = (product) => {\n        const currency = product.prices[this.props.selectedCurrency].currency\n        const amount = product.prices[this.props.selectedCurrency].amount\n        let currencySymbol = currency\n        if (currency === 'USD') {currencySymbol = '$'}\n        if (currency === 'GBP') {currencySymbol = '£'}\n        if (currency === 'AUD') {currencySymbol = '$'}\n        if (currency === 'JPY') {currencySymbol = '¥'}\n        if (currency === 'RUB') {currencySymbol = '₽'}\n        return currencySymbol+amount\n    }\n    componentDidCatch(err){\n        console.error(err)\n    } \n    render() {\n        const product = this.props.product\n        return(\n            <MainContainer>\n                <ProductName>{product.name}</ProductName>\n                {this.renderAttributes(product)}\n                <div>\n                    <AttributeTitle>Price:</AttributeTitle>\n                    <Price>{this.getPrice(product)}</Price>\n                </div>\n                <AddToCart \n                    onClick={()=>this.addProductToCart(product, this.props.selectedOptions)}\n                    style={this.disableButton(product.inStock)}>ADD TO CART\n                </AddToCart>\n                <Description dangerouslySetInnerHTML={{__html: this.purifyHtml(product.description)}} />\n            </MainContainer>\n        )\n    }\n}\nexport default ProductDetails","import React,{ PureComponent } from 'react'\nimport styled from 'styled-components'\nimport ProductDetails from './ProductDetails.js'\n\nconst MainContainer = styled.main`\n    width: 80%;\n    margin: auto;\n    margin-top: 3rem;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    text-align: center;\n`\nconst SideImages = styled.div`\n    display: grid;\n    grid-template-rows: 100px 100px 100px 100px 100px;\n    grid-template-columns: 120px;\n    grid-gap: 20px;\n`\nconst SideImage = styled.img`\n    height: 100px;\n    width: 100px;\n`\nconst MainImageContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 704px;\n    width: 610px;\n    margin: 25px;\n`\nconst MainImage = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: contain;\n`\n\nclass ProductPage extends PureComponent {\n    constructor(props){\n        super(props)\n        this.state = {\n            imgIndex: 0,\n        }\n    }\n    updateImgIndex = (imgURL) => {\n        // when side image is clicked, it will update 'imgIndex', which will cause the main image to change accordingly \n        this.setState({\n            imgIndex: this.props.product.gallery.findIndex(img => img === imgURL)\n        })\n    }\n    populateImgArray = () =>{\n            const array = []\n            this.props.product.gallery.map(img => array.push(img))\n            return array\n    }\n    renderSideImages = (images) => {\n        const array = []\n        if (images) {\n            images.map(img => array.push(\n                <SideImage \n                    src={img} \n                    alt='side'\n                    key={img}\n                    onClick={() => this.updateImgIndex(img)}\n                />))\n        } else {return null}\n        return array\n    }\n    getMainImage = () => {\n        return this.props.product.gallery[this.state.imgIndex]\n    }\n    componentDidCatch(err){\n        console.error(err)\n    }\n    render(){\n        const product = this.props.product\n        const images = this.populateImgArray()\n        return(\n            <MainContainer>\n                <SideImages>{this.renderSideImages(images)}</SideImages>\n                <MainImageContainer>\n                    <MainImage alt='main' src={this.getMainImage()} />\n                </MainImageContainer>\n                <ProductDetails \n                    product={product} \n                    selectedCurrency={this.props.selectedCurrency} \n                    addToCart={this.props.addToCart}\n                    saveOption={this.props.saveOption}\n                    selectedOptions={this.props.selectedOptions}\n                    cartItems={this.props.cartItems}\n                />                    \n            </MainContainer>\n        )\n    }\n}\nexport default ProductPage","export default __webpack_public_path__ + \"static/media/left.d5bb5aa4.svg\";","export default __webpack_public_path__ + \"static/media/right.e684cb98.svg\";","import React, {PureComponent} from 'react'\nimport styled from 'styled-components'\nimport ChevronLeft from '../static/images/left.svg'\nimport ChevronRight from '../static/images/right.svg'\n\nconst SliderContainer = styled.div`\n    width: 141px;\n    height: 185px;\n`\nconst Image = styled.img`\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n`\nconst Left = styled.img`\n    position: relative;\n    z-index: 9;\n    bottom: 56%;\n`\nconst Right = styled.img`\n    position: relative;\n    z-index: 9;\n    bottom: 56%;\n    left: 95px;\n`\n\nclass PhotoSlider extends PureComponent {\n    constructor(props){\n        super(props)\n        this.state = {\n            index: 0\n        }\n    }\n    moveLeft = () =>{\n        if (this.state.index === 0) {\n            return null\n        }\n        return this.setState({index: this.state.index-1})\n    }\n    moveRight = () => {\n        if (this.state.index === this.props.item.product.gallery.length-1) {\n            return null\n        }\n        return this.setState({index: this.state.index+1})\n    }\n    hideArrow = () => {\n        //in case if product has only 1 image, dont show slider arrows\n        if (this.props.item.product.gallery.length === 1) {\n            return{ display: 'none' }\n        } else {return null}\n    }\n    render(){\n        const photos = this.props.item.product.gallery\n        return(\n            <SliderContainer>\n                <Image src={photos[this.state.index]} />\n                <Left onClick={this.moveLeft} src={ChevronLeft} alt='left' style={this.hideArrow()}/>\n                <Right onClick={this.moveRight} src={ChevronRight} alt='right' style={this.hideArrow()}/>\n            </SliderContainer>\n        )\n    }\n}\nexport default PhotoSlider","import React,{PureComponent} from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100%;\n    justify-content: space-between;\n    margin-right: 1rem;\n`\nconst ModifierBox = styled.div`\n    display: block;\n    box-sizing: border-box;\n    width: 45px;\n    height: 45px;\n    border: 1px solid #1D1F22;\n    text-align: center; \n    background-color: white;\n    cursor: pointer;\n    &:hover {\n        background-color: black;\n        color: white;\n        transition: 300ms;\n    }\n`\nconst Modifier = styled.h1`\n    font-family: 'Raleway';\n    font-weight: 200;\n    position: relative;\n    bottom: 1.16rem;\n    user-select: none;\n`\nconst Quantity = styled.h2`\n    font-family: 'Raleway';\n    font-weight: 200;\n`\n\nclass QuantityModifier extends PureComponent {\n    add = () => {\n        this.props.updateQuantity(this.props.item, +1)\n    }\n    subtract = () => {\n        if (this.props.item.quantity > 0) {\n            this.props.updateQuantity(this.props.item, -1)\n        }\n    }\n    render(){\n        return(\n            <Container>\n                <ModifierBox>\n                    <Modifier onClick={this.add}>+</Modifier>\n                </ModifierBox>\n                <Quantity>{this.props.item.quantity}</Quantity>\n                <ModifierBox>\n                    <Modifier onClick={this.subtract}>-</Modifier>\n                </ModifierBox>\n            </Container>\n        )\n    }\n}\nexport default QuantityModifier","import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst OptionBox = styled.label`\n    display: block;\n    box-sizing: border-box;\n    min-width: 68px;\n    border: 1px solid #1D1F22;\n    align-items: center;\n    text-align: center; \n    background-color: white;\n    cursor: pointer;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    margin-right: 1rem;\n    margin-bottom: 1rem;\n    &:hover {\n        background-color: black;\n        color: white;\n        transition: 300ms;\n    }\n`\nconst ColorBox = styled.label`\n    display: block;\n    box-sizing: border-box;\n    min-width: 66px;\n    min-height: 48px;\n    border: 1px solid #1D1F22;\n    align-items: center;\n    text-align: center; \n    cursor: pointer;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    margin-right: 1rem;\n    margin-bottom: 1rem;\n    background-color: black;\n    opacity: 1;\n    &:hover {\n        border: 2px black solid;\n    }\n`\nconst Input = styled.input`\n    display: none;\n    &:checked + label {\n        background-color: black;\n        color: white;\n    }\n    &:checked + #colorbox {\n        opacity: 0.7;\n        border: 3px black solid;\n    }\n`\n\nclass CartOptionSelectorBox extends Component {\n    onChange = (option) => {\n        return this.props.updateCartItem(this.props.item, this.props.attribute.name, option)\n    }\n    populateOptions = (attribute, item) => {\n        const productOptions = this.props.selectedOptions\n        for (let i=0; i<productOptions.length; i++){\n            if (productOptions[i].productName === this.props.item.product.name \n            && productOptions[i].attributeName === attribute \n            && productOptions[i].option === item) {\n                return true\n            }\n        }\n        return false\n    }\n    optionsToRender = (attribute) => {\n        const array = []\n        if (attribute.type === 'swatch') {\n            attribute.items.map(item => array.push(\n                <div key={uuidv4()+item.value}>\n                    <Input\n                        type='radio'\n                        value={item.value} \n                        name={this.props.id+'color'}\n                        defaultChecked={this.populateOptions(attribute.name, item.value)}\n                        onClick={()=>this.onChange(item.value)}\n                        id={this.props.id+item.value}\n                    />\n                    <ColorBox id='colorbox'\n                        htmlFor={this.props.id+item.value} \n                        style={{backgroundColor: item.value}}\n                    />\n                </div>))\n        } else { \n            attribute.items.map(item => array.push(\n                <div key={uuidv4()+item.value}>\n                    <Input\n                        type='radio'\n                        value={item.value} \n                        name={this.props.id+attribute.name}\n                        defaultChecked={this.populateOptions(attribute.name, item.value)}\n                        onClick={()=>this.onChange(item.value)}\n                        id={this.props.id+item.value}\n                    />\n                    <OptionBox htmlFor={this.props.id+attribute.name} onClick={()=>this.onChange(item.value)}>{item.value}</OptionBox>\n                </div>))\n        }\n        return array\n    }\n    render(){\n        return(\n            this.optionsToRender(this.props.attribute)\n        )\n    }\n}\nexport default CartOptionSelectorBox","import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { v4 as uuidv4 } from 'uuid';\nimport PhotoSlider from './PhotoSlider'\nimport QuantityModifier from './QuantityModifier'\nimport CartOptionSelectorBox from './CartOptionSelectorBox'\n\nconst ItemContainer = styled.div`\n    font-family: 'Raleway', sans-serif;\n    display: flex;\n    justify-content: space-between;\n    max-width: 1100px;\n    min-height: 186px;\n    border-top: 1px solid #E5E5E5;\n    margin-left: 3rem;\n    margin-bottom: 1rem;\n    align-items: center;\n`\nconst CartTitle = styled.h1`\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: bold;\n    font-size: 32px; \n    margin-left: 3rem;\n`\nconst Title = styled.p`\n    font-style: normal;\n    font-weight: 500;\n    font-size: 30px;\n    line-height: 27px;\n    align-items: center;\n    color: #1D1F22;\n`\nconst Price = styled.p`\n    font-family: 'Raleway';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 18px;\n    align-items: center;\n    color: #1D1F22;\n`\nconst OptionBoxes = styled.div`\n    min-width: 200px;\n    max-width: 400px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n`\nconst Side1 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    margin-top: 1rem;\n`\nconst Side2 = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-top: 1rem;\n`\nconst TotalAmount = styled.div`\n    font-family: 'Raleway', sans-serif;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1100px;\n    border-top: 1px solid #E5E5E5;\n    margin-left: 3rem;\n    margin-bottom: 1rem;\n`\n\nclass Cart extends Component {\n    getTotal = () => {\n        let total = 0;\n        const items = this.props.items\n        if (items[0] === undefined) {return null}\n        const currencySymbol = this.getCurrencySymbol(this.props.items[0].product.prices[this.props.selectedCurrency].currency)\n        items.map(item => {\n            return total = total + item.product.prices[this.props.selectedCurrency].amount * item.quantity\n        })\n        return currencySymbol+total.toFixed(2)\n    }\n    getCartTitle = () => {\n        if (this.props.items.length < 1) {\n            return 'Cart is empty'\n        }\n        return 'CART'\n    }\n    getCurrencySymbol = (currency) => {\n        let symbol = currency\n        if (symbol === 'USD') {symbol = '$'}\n        if (symbol === 'GBP') {symbol = '£'}\n        if (symbol === 'JPY') {symbol = '¥'}\n        if (symbol === 'RUB') {symbol = '₽'} \n        return symbol\n    }\n    showItems = () => {\n        const array = []\n        const index = this.props.selectedCurrency\n        this.props.items.map(item => {\n            const currency = item.product.prices[index].currency\n            const price = item.product.prices[index].amount\n            return array.push(\n                <ItemContainer key={uuidv4()}>\n                    <Side1>\n                        <Title>{item.product.name}</Title> \n                        <Price>{this.getCurrencySymbol(currency)}{price}</Price>\n                        <br />\n                        <div>\n                            {(item.product.attributes.length === 0) ? <br/> :\n                                item.product.attributes.map(attribute => {\n                                    return(\n                                        <div key={uuidv4()}>\n                                            <OptionBoxes>\n                                                <CartOptionSelectorBox         \n                                                    attribute={attribute} \n                                                    cartItems={this.props.items}\n                                                    selectedOptions={item.productOptions}\n                                                    id={item.objectID}\n                                                    item={item}\n                                                    updateCartItem={this.props.updateCartItem}\n                                                />\n                                            </OptionBoxes>\n                                            <br/>\n                                        </div>)\n                                })\n                            }\n                        </div>\n                    </Side1>\n                    <Side2>\n                        <QuantityModifier item={item} updateQuantity={this.props.updateQuantity}/>\n                        <PhotoSlider item={item} />\n                    </Side2>\n                </ItemContainer>) \n        })\n        return array\n    }\n    totalText = () => {\n        if (this.props.items[0] === undefined) {return null}\n        return 'TOTAL'\n    }\n    render(){        \n        return(\n            <>\n                <CartTitle>{this.getCartTitle()}</CartTitle>\n                <br />\n                {this.showItems()}\n                <TotalAmount>\n                    <h2>{this.totalText()}</h2>\n                    <h2>{this.getTotal()}</h2>\n                </TotalAmount>\n            </>\n        )\n    }\n}\nexport default Cart","import React, { Component } from 'react'\nimport Products from './components/Products'\nimport Header from './components/Header'\nimport ProductPage from './components/ProductPage'\nimport Cart from './components/Cart'\nimport ApolloClient from 'apollo-boost'\nimport {ApolloProvider} from 'react-apollo'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nconst client = new ApolloClient({\n  uri: 'https://radiant-inlet-15571.herokuapp.com/'\n})\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state={\n        dataArray: [],\n        category: '',\n        selectedCurrency: 0,\n        productPageItem: {},\n        cartItems: [],\n        selectedOptions: []\n    }\n  }\n  handleCategoryChange = (category) => {\n    this.setState({category: category})\n  }\n  handleCurrencyChange = (currencyIndex) => {\n    this.setState({selectedCurrency: currencyIndex})\n  }\n  setProductPageItem = (product) => {\n    this.setState({productPageItem: product})\n    localStorage.setItem('productPageItem', JSON.stringify(product))\n  }\n  addToCart = (object) => {\n    const cartItems = this.state.cartItems\n    if (cartItems.length === 0) {\n      object.quantity = 1\n      return this.setState({\n        cartItems: this.state.cartItems.concat(object),\n        selectedOptions: []\n      })\n    }\n    let matchCounter=0;\n    for (let i=0; i<cartItems.length; i++){\n      if (cartItems[i].product.name === object.product.name){\n        for (let ii=0; ii<cartItems[i].productOptions.length; ii++){\n          if (cartItems[i].productOptions[ii].option === object.productOptions[ii].option){\n            matchCounter++\n          }\n        }\n        if (matchCounter === cartItems[i].productOptions.length) {\n          this.updateQuantity(cartItems[i], 1)\n          return this.setState({selectedOptions:[]})\n        }\n        matchCounter=0\n      }\n    }\n    object.quantity = 1\n    this.setState({\n      cartItems: this.state.cartItems.concat(object),\n      selectedOptions: []\n    })\n  }\n  updateCartItem = (item, attributeName, option) => {\n    //this changes the option of one of the attributes of a particular cartItem that it receives\n    const cartItems = this.state.cartItems\n    cartItems.map(cartItem => {\n      if (cartItem.objectID === item.objectID){\n        return cartItem.productOptions.map(productOption => {\n          if (productOption.attributeName === attributeName){\n            return productOption.option = option\n          }\n          return null\n        })\n      }\n      return null\n    })\n    return this.setState({cartItems: cartItems})\n  }\n  saveOption = (productName, attributeName, option) => { \n    const selectedOptions = this.state.selectedOptions\n    const object = { //this data is being retrieved from ProductDetails and is being passed to Cart\n        productName: productName,\n        attributeName: attributeName,\n        option: option\n    }\n    //check if a mutually exclusive option had already been chosen for this item. If yes, delete previosuly selected item:\n    for (let i=0; i<selectedOptions.length; i++){\n      if (selectedOptions[i].productName === productName && selectedOptions[i].attributeName === attributeName){\n          //if old option is found, it will be removed from the array:\n          this.setState({\n            selectedOptions: this.state.selectedOptions.splice(i, 1)\n          })\n      }\n    }\n    this.setState({\n        selectedOptions: this.state.selectedOptions.concat(object)\n    })\n  }\n  updateQuantity = (product, modifier) => {\n    let items = this.state.cartItems\n    let matchCounter = 0; \n    for (let i=0; i<items.length; i++) {\n      if (items[i].objectID === product.objectID){\n        for (let ii=0; ii<items[i].product.attributes.length; ii++){\n          if (items[i].productOptions[ii].option === product.productOptions[ii].option){\n            matchCounter++\n          }\n        }\n        if (matchCounter === items[i].productOptions.length) {\n          items[i].quantity += modifier //modifier is either -1 or +1\n        }\n        //if quantity is 0, remove the item from array\n        if (items[i].quantity < 1) { \n          items.splice(i, 1)\n          this.setState({cartItems: items})\n        }\n        //replace cartItems with updated array:\n        return this.setState({cartItems: items})\n      }\n    }\n  }\n  render(){\n    return(\n      <ApolloProvider client={client}>\n        <Router>\n          <Header \n            category={this.state.category} \n            updateCategory={this.handleCategoryChange} \n            changeCurrency={this.handleCurrencyChange}\n            items={this.state.cartItems} \n            selectedCurrency={this.state.selectedCurrency}\n            updateQuantity={this.updateQuantity}\n            saveOption={this.saveOption}\n            selectedOptions={this.state.selectedOptions}\n          />\n          <Switch>\n            <Route exact path='/eshop_react/'>\n              <Products \n                category={this.state.category} \n                productsArray={this.state.dataArray} \n                selectedCurrency={this.state.selectedCurrency}\n                setProductPageItem={this.setProductPageItem}\n                addToCart={this.addToCart}\n              />\n            </Route>\n            <Route exact path='/eshop_react/product'>\n              <ProductPage productPageItem\n                selectedCurrency={this.state.selectedCurrency}\n                product={JSON.parse(localStorage.getItem('productPageItem'))}\n                addToCart={this.addToCart}\n                saveOption={this.saveOption}\n                selectedOptions={this.state.selectedOptions}\n                cartItems={this.state.cartItems}\n              />\n            </Route>\n            <Route exact path='/eshop_react/cart'>\n              <Cart \n                items={this.state.cartItems} \n                selectedCurrency={this.state.selectedCurrency}\n                updateQuantity={this.updateQuantity}\n                saveOption={this.saveOption}\n                updateCartItem={this.updateCartItem}\n                selectedOptions={this.state.selectedOptions}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    )\n  }\n}\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ApolloClient, InMemoryCache} from \"@apollo/client\"\n\n\n// eslint-disable-next-line no-unused-vars\nconst client = new ApolloClient({\n  uri: 'https://radiant-inlet-15571.herokuapp.com/',\n  cache: new InMemoryCache(),\n  introspection: true,\n  playground: true\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}